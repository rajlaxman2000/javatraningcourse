
JSP with Life cycle
JSP API
JSP in Eclipse
Scripting elements
scriptlet tag
	expression tag
	declaration tag
	Implicit Objects
Directive elements
	page directive
	include directive
	taglib directive
Exception Handling
Action Elements


Expression Language

MVC in JSP

JSTL

Custom tags

Development in JSP
=====================================
Expression Language
Implicit Objects		Usage
-----------------------------------------------------------------------------------------------
pageScope				it maps the given attribute name with the value set in the page scope
requestScope			it maps the given attribute name with the value set in the request scope
sessionScope			it maps the given attribute name with the value set in the session scope
applicationScope		it maps the given attribute name with the value set in the application scope
param					it maps the request parameter to the single value
paramValues				it maps the request parameter to an array of values
header					it maps the request header name to the single value
headerValues			it maps the request header name to an array of values
cookie					it maps the given cookie name to the cookie value
initParam				it maps the initialization parameter
pageContext				it provides access to many objects request, session etc.













<% %>
<%= %>
<%! %>

================================================================

out				JspWriter
request			HttpServletRequest
response		HttpServletResponse
---------
config			ServletConfig  : TODO: this will be seen later with integration of servlet
application		ServletContext : TODO: this will be seen later with integration of servlet
---------
session			HttpSession
pageContext		PageContext
page			Object
exception		Throwable
================================================================
Directive elements
	page directive <%@ page
	include directive <%@ include
	taglib directive <@ taglib COmment: This will be discussed during the jstl tags discussion
	------------------
	page directive :
		Attributes of JSP page directive
			import
			contentType
			extends
			info
			buffer
			language
			isELIgnored
			isThreadSafe
			autoFlush
			session
			pageEncoding
			errorPage
			isErrorPage
-------------------------------------------------------------------------------------------------
JSP Action tags
	jsp:forward
	jsp:include
	jsp:useBean
		<jsp:useBean id= "instanceName" scope= "page | request | session | application"   
				class= "packageName.className" type= "packageName.className"  
				beanName="packageName.className | <%= expression >" >  
		</jsp:useBean>		  
	jsp:setProperty
		<jsp:setProperty name="instanceOfBean" property= "*"   |   
				property="propertyName" param="parameterName"  |   
				property="propertyName" value="{ string | <%= expression %>}" />  
	jsp:getProperty
			
		
	jsp:plugin
	jsp:param
	jsp:fallback	
=======================================================================
JSTL tags : 
	core tags::	The JSTL core tag provide variable support, URL management, flow control etc. 
			The url for the core tag is http://java.sun.com/jsp/jstl/core . The prefix of core tag is c.
	sql tags ::	The JSTL sql tags provide SQL support. The url for the sql tags is 
			http://java.sun.com/jsp/jstl/sql and prefix is sql.
	xml tags ::	The xml sql tags provide flow control, transformation etc. The url for the xml tags is 
		http://java.sun.com/jsp/jstl/xml and prefix is x.
	internationalization tags :: 	The internationalization tags provide support for message formatting, 
		number and date formatting etc. The url for the internationalization tags is 
		http://java.sun.com/jsp/jstl/fmt and prefix is fmt.
	functions tags :: The functions tags provide support for string manipulation and string length. 
		The url for the functions tags is http://java.sun.com/jsp/jstl/functions and prefix is fn.

=================================================================================================

Tag 			Description  (Core tags)
<c:out> 		Like <%= ... >, but for expressions. 
<c:set> 		Sets the result of an expression evaluation in a 'scope' 
<c:remove> 		Removes a scoped variable (from a particular scope, if specified). 
<c:catch> 		Catches any Throwable that occurs in its body and optionally exposes it. 
<c:if> 			Simple conditional tag which evalutes its body if the supplied condition is true. 
<c:choose> 		Simple conditional tag that establishes a context for mutually exclusive conditional operations, 
				marked by <when> and <otherwise> <c:when> Subtag of <choose> that includes its body if its condition evalutes to 'true'. <c:otherwise > Subtag of <choose> that follows <when> tags and runs only if all of the prior conditions evaluated to 'false'. 
<c:import> 		Retrieves an absolute or relative URL and exposes its contents to either the page, a String in 'var', or a Reader in 'varReader'. 
<c:forEach> 	The basic iteration tag, accepting many different collection types and supporting subsetting and other functionality . <c:forTokens> Iterates over tokens, separated by the supplied delimeters. 
<c:param> 		Adds a parameter to a containing 'import' tag's URL. 
<c:redirect> 	Redirects to a new URL. 
<c:url> 		Creates a URL with optional query parameters